[gd_scene load_steps=6 format=3 uid="uid://djjmyevep7nq4"]

[ext_resource type="Theme" uid="uid://bwqifwabah580" path="res://Themes/logic_block.tres" id="1_5cdfo"]
[ext_resource type="StyleBox" uid="uid://bid1es6bkyxvw" path="res://LogicBlockStyles/operation.tres" id="2_8go7g"]
[ext_resource type="StyleBox" uid="uid://dd387wna6hgc7" path="res://LogicBlockStyles/ButtonSettings/option_button.tres" id="3_8go7g"]

[sub_resource type="GDScript" id="GDScript_5cdfo"]
resource_name = "operation"
script/source = "extends LogicBlocks

func load_value(value: Array):
	option_get_item(%op1,value[1])
	%a.text = value[2]
	%b.text = value[3]
	%c.text = value[4]

	pass

func option_get_item(node: OptionButton, optext : String):
	for i in range(node.get_popup().item_count):
		if op_list[i] == optext:
			node.select(i)
			_on_op_1_item_selected(i)

var index1
var index2
var op_list = {
		0 : \"add\" ,
		1 : \"sub\" ,
		2 : \"mul\" ,
		3 : \"div\" ,
		4 : \"idiv\" ,
		5 : \"mod\" ,
		6 : \"pow\" ,
		7 : \"equal\" ,
		8 : \"notEqual\" ,
		9 : \"land\" ,
		10 : \"lessThan\" ,
		11 : \"lessThanEq\" ,
		12 : \"greaterThan\" ,
		13 : \"greaterThanEq\" ,
		14 : \"strictEqual\" ,
		15 : \"shl\" ,
		16 : \"shr\" ,
		17 : \"ushr\" ,
		18 : \"or\" ,
		19 : \"and\" ,
		20 : \"xor\" ,
		21 : \"not\" ,
		22 : \"max\" ,
		23 : \"min\" ,
		24 : \"angle\" ,
		25 : \"angleDiff\" ,
		26 : \"len\" ,
		27 : \"noise\" ,
		28 : \"abs\" ,
		29 : \"sign\" ,
		30 : \"log\" ,
		31 : \"logn\" ,
		32 : \"log10\" ,
		33 : \"floor\" ,
		34 : \"ceil\" ,
		35 : \"round\" ,
		36 : \"sqrt\" ,
		37 : \"rand\" ,
		38 : \"sin\" ,
		39 : \"cos\" ,
		40 : \"tan\" ,
		41 : \"asin\" ,
		42 : \"acos\" ,
		43 : \"atan\" ,
	}
	
func compile():

	return( \"op \" + op_list[%op1.selected] + \" \" + %a.text + \" \" + %b.text + \" \" + %c.text + \"\\n\" )
	
	pass
	




func _on_op_1_item_selected(index: int) -> void:
	if index >= 32 or index == 30 or index == 21 or index == 29 or index == 28:
		%c.visible = false
	else:
		%c.visible = true
	
	if index >= 21 and  index != 31:
		#$HBoxContainer.move_child(%b,index2)
		$HBoxContainer.move_child(%op1,3)
	else:
		#$HBoxContainer.move_child(%b,index1)
		$HBoxContainer.move_child(%op1,4)
	
	pass # Replace with function body.
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_yod6u"]

[node name="Operation" type="PanelContainer"]
offset_right = 40.0
offset_bottom = 40.0
size_flags_horizontal = 0
size_flags_vertical = 4
theme = ExtResource("1_5cdfo")
theme_override_styles/panel = ExtResource("2_8go7g")
script = SubResource("GDScript_5cdfo")

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 2
theme_override_constants/separation = 10

[node name="Label" type="Label" parent="HBoxContainer"]
layout_mode = 2
text = "Operation"

[node name="a" type="LineEdit" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "result"
expand_to_text_length = true
select_all_on_focus = true

[node name="Label2" type="Label" parent="HBoxContainer"]
layout_mode = 2
text = "="

[node name="b" type="LineEdit" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "a"
expand_to_text_length = true
select_all_on_focus = true

[node name="op1" type="OptionButton" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_styles/focus = SubResource("StyleBoxEmpty_yod6u")
theme_override_styles/hover_pressed = ExtResource("3_8go7g")
theme_override_styles/hover = ExtResource("3_8go7g")
theme_override_styles/pressed = ExtResource("3_8go7g")
theme_override_styles/normal = ExtResource("3_8go7g")
alignment = 1
selected = 0
fit_to_longest_item = false
allow_reselect = true
item_count = 44
popup/item_0/text = "+"
popup/item_0/id = 0
popup/item_1/text = "-"
popup/item_1/id = 1
popup/item_2/text = "*"
popup/item_2/id = 2
popup/item_3/text = "/"
popup/item_3/id = 3
popup/item_4/text = "//"
popup/item_4/id = 4
popup/item_5/text = "%"
popup/item_5/id = 5
popup/item_6/text = "^"
popup/item_6/id = 6
popup/item_7/text = "=="
popup/item_7/id = 7
popup/item_8/text = "not"
popup/item_8/id = 8
popup/item_9/text = "and"
popup/item_9/id = 9
popup/item_10/text = "<"
popup/item_10/id = 10
popup/item_11/text = "<="
popup/item_11/id = 11
popup/item_12/text = ">"
popup/item_12/id = 12
popup/item_13/text = ">="
popup/item_13/id = 13
popup/item_14/text = "==="
popup/item_14/id = 14
popup/item_15/text = "<<"
popup/item_15/id = 15
popup/item_16/text = ">>"
popup/item_16/id = 16
popup/item_17/text = ">>>"
popup/item_17/id = 17
popup/item_18/text = "or"
popup/item_18/id = 18
popup/item_19/text = "b-and"
popup/item_19/id = 19
popup/item_20/text = "xor"
popup/item_20/id = 20
popup/item_21/text = "flip"
popup/item_21/id = 21
popup/item_22/text = "max"
popup/item_22/id = 22
popup/item_23/text = "min"
popup/item_23/id = 23
popup/item_24/text = "angle"
popup/item_24/id = 24
popup/item_25/text = "angle-diff"
popup/item_25/id = 25
popup/item_26/text = "len"
popup/item_26/id = 26
popup/item_27/text = "noise"
popup/item_27/id = 27
popup/item_28/text = "abs"
popup/item_28/id = 28
popup/item_29/text = "sign"
popup/item_29/id = 29
popup/item_30/text = "log"
popup/item_30/id = 30
popup/item_31/text = "logn"
popup/item_31/id = 31
popup/item_32/text = "log10"
popup/item_32/id = 32
popup/item_33/text = "floor"
popup/item_33/id = 33
popup/item_34/text = "ceil"
popup/item_34/id = 34
popup/item_35/text = "round"
popup/item_35/id = 35
popup/item_36/text = "sqrt"
popup/item_36/id = 36
popup/item_37/text = "rand"
popup/item_37/id = 37
popup/item_38/text = "sin"
popup/item_38/id = 38
popup/item_39/text = "cos"
popup/item_39/id = 39
popup/item_40/text = "tan"
popup/item_40/id = 40
popup/item_41/text = "asin"
popup/item_41/id = 41
popup/item_42/text = "acos"
popup/item_42/id = 42
popup/item_43/text = "atan"
popup/item_43/id = 43

[node name="c" type="LineEdit" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "b"
expand_to_text_length = true
select_all_on_focus = true

[connection signal="item_selected" from="HBoxContainer/op1" to="." method="_on_op_1_item_selected"]
